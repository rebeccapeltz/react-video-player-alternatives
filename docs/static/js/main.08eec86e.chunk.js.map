{"version":3,"sources":["VideoPlayerClass.js","VideoPlayerFunction.js","VideoOptionsContext.js","VideoPlayerContext.js","VideoPlayerCloudHosted.js","App.js","reportWebVitals.js","index.js"],"names":["VideoPlayerClass","videoName","cld","Cloudinary","cloud_name","secure","videoPlayerInit","videoPlayer","publicId","fluid","controls","preload","mute","autoplay","this","className","id","Component","VideoPlayerFunction","props","cloudinary","options","cloudName","useEffect","console","log","document","querySelector","VideoOptionsContext","createContext","VideoOptionsProvider","children","useState","Provider","value","VideoPlayerContext","videoOptions","useContext","on","e","VideoPlayerCloudHosted","title","src","allow","allowfullscreen","frameborder","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.08eec86e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Cloudinary } from \"cloudinary-core\";\nimport \"cloudinary-video-player/dist/cld-video-player.light.min\";\nimport \"cloudinary-video-player/dist/cld-video-player.light.min.css\";\n\nclass VideoPlayerClass extends Component {\n  videoName = \"race_road_car\";\n  cld = () => {\n    return new Cloudinary({ cloud_name: \"demo\", secure: true });\n  };\n  videoPlayerInit = () => {\n    const cld = this.cld();\n    cld.videoPlayer(\"some-video\", {\n      publicId: this.videoName,\n      fluid: true,\n      controls: true,\n      preload: \"auto\",\n      mute: true,\n      autoplay: false\n    });\n  };\n  componentDidMount() {\n    this.videoPlayerInit();\n  }\n  render() {\n    return (\n      <>\n        <div className=\"vp\">\n          <video id=\"some-video\" />\n        </div>\n      </>\n    );\n  }\n}\nexport default VideoPlayerClass;\n","import React, {useEffect } from \"react\";\nimport { Cloudinary } from \"cloudinary-core\";\nimport \"cloudinary-video-player/dist/cld-video-player.light.min\";\nimport \"cloudinary-video-player/dist/cld-video-player.light.min.css\";\n\n\nfunction VideoPlayerFunction(props) {\n  \n  const cloudinary = new Cloudinary({ cloud_name: props.options.cloudName, secure: true });\n  const videoPlayerInit = () => {\n    debugger;\n    console.log(\"calling debugger\");\n    cloudinary.videoPlayer(document.querySelector(\".fn-video\"), {\n      publicId: props.options.publicId,\n      fluid: true,\n      controls: true,\n      preload: \"auto\",\n      mute: true,\n      autoplay: false    \n    });\n  };\n\n  useEffect(() => {  \n    debugger;\n    console.log(\"calling useEffect\");\n   videoPlayerInit();\n  });\n  debugger;\n  console.log(\"calling fn render\")\n  return (\n    <>\n      <div className=\"vp\">\n        <video className=\"fn-video\" />\n      </div>\n    </>\n  );\n}\n\nexport default VideoPlayerFunction;\n","import React, { createContext, useState } from \"react\";\n\nexport const VideoOptionsContext = createContext();\n\n\n\n// This context provider is passed to any component requiring the context\nexport const VideoOptionsProvider = ({ children }) => {\n  const [cloudName] = useState(\"demo\");\n  const [publicId] = useState(\"race_road_car\");\n\n  return (\n    <VideoOptionsContext.Provider\n      value={{\n        cloudName,\n        publicId,\n      }}\n    >\n      {children}\n    </VideoOptionsContext.Provider>\n  );\n};\n","import React, { useEffect, useContext } from \"react\";\nimport { VideoOptionsContext } from \"./VideoOptionsContext\";\n\nimport { Cloudinary } from \"cloudinary-core\";\nimport \"cloudinary-video-player/dist/cld-video-player.light.min\";\nimport \"cloudinary-video-player/dist/cld-video-player.light.min.css\";\n\nfunction VideoPlayerContext() {\n  // debugger;\n  const videoOptions = useContext(VideoOptionsContext);\n\n  const cloudinary = new Cloudinary({\n    cloud_name: videoOptions.cloudName,\n    secure: true,\n  });\n  const videoPlayerInit = () => {\n    // debugger;\n    console.log(\"add video player JS\");\n    const player = cloudinary.videoPlayer(\n      document.querySelector(\".context-video\"),\n      {\n        publicId: videoOptions.publicId,\n        fluid: true,\n        controls: true,\n        preload: \"auto\",\n        mute: true,\n        autoplay: false,\n      }\n    );\n\n    player.on(\"loadedmetadata\", (e) => {\n      console.log(\"app detected\", e);\n    });\n  };\n\n  useEffect(() => {\n    // debugger;\n    console.log(\"calling useEffect\");\n    videoPlayerInit();\n  });\n  // debugger;\n  console.log(\"calling fn render\");\n  return (\n    <>\n      <div className=\"vp\">\n        <video className=\"context-video\" />\n        <p>\n          Video is rendered: {videoOptions.cloudName}\n         \n        </p>\n      </div>\n    </>\n  );\n}\n\nexport default VideoPlayerContext;\n","import React from \"react\";\n\nfunction VideoPlayerCloudHosted(props) {\n  return (\n    <>\n      <iframe\n        title=\"Video Player Cloud Hosted\"\n        src={`https://player.cloudinary.com/embed/?cloud_name=${props.options.cloudName}&public_id=${props.options.publicId}&&player%5Bfluid%5D=true&player%5Bcontrols%5D=true&player%5Bcontrol_bar%5D%5Bvolume_panel%5D=false&player%5Bcontrol_bar%5D%5Bfullscreen_toggle%5D=false&player%5Bposter_options%5D%5Btransformation%5D%5Bstart_offset%5D=0`}\n        allow=\"autoplay; fullscreen; encrypted-media; picture-in-picture\"\n        allowfullscreen\n        frameborder=\"0\"\n      ></iframe>\n    </>\n  );\n}\n\nexport default VideoPlayerCloudHosted;\n","import \"./App.css\";\nimport VideoPlayerClass from \"./VideoPlayerClass\";\nimport VideoPlayerFunction from \"./VideoPlayerFunction\";\nimport VideoPlayerContext from \"./VideoPlayerContext\";\nimport React from \"react\";\nimport { VideoOptionsProvider } from \"./VideoOptionsContext\";\nimport VideoPlayerCloudHosted from \"./VideoPlayerCloudHosted\";\n\nfunction App() {\n  const videoOptions = { cloudName: \"demo\", publicId: \"race_road_car\" };\n\n\n  // </div>\n  return (\n\n\n    <div className=\"App\">\n      <h1>Video Player Sandbox</h1>\n\n      <div className=\"video-card\">\n        <h2>Video Player Cloud Hosted</h2>\n        <div className=\"vp\">\n          <VideoPlayerCloudHosted options={videoOptions}/>\n        </div>\n      </div>\n\n      <div className=\"video-card\">\n        <h2>Video Player in Class</h2>\n        <div className=\"vp\">\n          <VideoPlayerClass />\n        </div>\n      </div>\n\n      <div className=\"video-card\">\n        <h2>Video Player in Function</h2>\n        <div className=\"vp\">\n          <VideoPlayerFunction options={videoOptions} />\n        </div>\n      </div>\n\n      <div className=\"video-card\">\n        <h2>Video Player in Function with Context Provider</h2>\n        <div className=\"vp\">\n          <VideoOptionsProvider>\n            <VideoPlayerContext  />\n          </VideoOptionsProvider>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}